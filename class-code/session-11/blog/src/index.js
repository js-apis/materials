/* 
  This file was automatically generated by `create-react-app`
  when we executed the command `create-react-app blog` from the command line,
  This and a whole bunch of other files were automatically generated for our convenience.
*/

/* 
  Since we are working with React, we need to import it.
  More info here: https://reactjs.org
*/
import React from 'react';
/* 
  `react-dom` is a package that helps React interact with DOM elements.
  If you look further down in this file, you'll see how we use it.
  Pay attention to how we import `react` and `react-dom`.
  These are packages we have installed with `npm`. So `npm` knows these packages by name.
  Which means you can say `import Thing from 'package-name'`.
  We have another way of importing files, which you will see below, with explanation.
*/
import ReactDOM from 'react-dom';
/* 
  Thanks to `Webpack` we can import `css` files into our JS like this.
  Pay attention to how we name our files:
  - index.js
  - index.css
  This means that we can put all the styels related to `index.js` in `index.css`
  And import the CSS here.
  Pay attention to how we iport `index.css`. This is not some package we downloaded via `npm`
  But rather, a `css` file we wrote and maintain ourselves. In this case what we should do, is tell our computer
  "where exactly" to fetch this file. So, we need to use a `relative path`.
  `relative path` is a simple concept: 

      Where does the file we want to import live, in relation to this current file where we are writing code?

  If you look in your `src` directory where this current file is located, you will see that `index.css` is also 
  in the same directory. Which means that the `relative` path for `index.css` is `./index.css`.
  The `./` part of the path means, "In this same directory".
  If we have put this css file in a sub-directory of `src` called `styles`, we woul import it like this:
  `import ./styles/index.css`
 */
import './index.css';
/* 
  Much like the `import` statement above, `App.js` is sitting in the same directory as `index.js`
  Which means that we can import it using this simple relative path.
  Pay attention that unlike the `css` file above, we don't need to write the file extention here. 
  So we can drop the `.js` part. Your computer will know that you want to imprt a `.js` file automatically
*/
import App from './App';

/* 
  The following import is a file that helps our app run faster, and work offline, meaning that even if
  there is no active internet connection, our app will behave well.
  We will not cover this topic in class but we you can read all about here here:
  - https://developers.google.com/web/fundamentals/codelabs/your-first-pwapp/
  - https://www.udacity.com/course/intro-to-progressive-web-apps--ud811
  - https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app
  - https://scotch.io/tutorials/the-ultimate-guide-to-progressive-web-applications
  - https://medium.com/quick-code/top-tutorials-to-learn-progressive-web-app-pwa-57bdf06af328
*/
import * as serviceWorker from './serviceWorker';

/* 
  The followind line of code says: Render my `App` (imported above, on line 48)
  Inside a DOM element with the ID of `root`.
  If you open the file `public/index.html` You will see that we have the following DOM element there:
  `<div id="#root"></div>` - That is basically the container for our `App`.
*/
ReactDOM.render(<App />, document.getElementById('root'));

// If you want your app to work offline and load faster, you can change
// unregister() to register() below. Note this comes with some pitfalls.
// Learn more about service workers: https://bit.ly/CRA-PWA
serviceWorker.unregister();
